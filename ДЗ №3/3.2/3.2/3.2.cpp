// 3.2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#include <iostream>
#include <math.h>;
using namespace std;
class Main {
    int s, m, n;
public: 
    Main(int S, int M, int N) {
        s = S;
        m = M;
        n = N;
}
    double it(double r) {
        return (12 * m * (pow(1 + r, n) - 1)) / (s * pow(1 + r, n));
    }
};
int main()
{
    int S, m, n;

    double a = 2, p = 1;
    S = 300000;
    m = 130000;
    n = 2;
    cout << "S = " << S << "\nm = " << m << "\nn = " << n << "\n";
    /*
    cout << "Enter S" << endl;
    cin >> S;
    cout << "Enter m" << endl;
    cin >> m;
    cout << "Enter n" << endl;
    cin >> n;
    */
    Main Q = Main(S, m, n);
    double check = pow(10, -7);
    while (abs(a - p) > check)
    {
        a = p;
        p = Q.it(p);
        //cout << p << endl;
    }
    cout << "p = " << p * 100 << "\nmter = " << (S * p * pow(1 + p, n)) / (12 * (pow(1 + p, n) - 1));
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
